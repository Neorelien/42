- EXPORT
		- le nom de la var ne peut pas
			- etre un chiffre/nombre seul
			- compose d'un char special tel que
				- ~ ? ! # { } [] \ ^ @ ° £ % §
-------------------------------------------------------------
-PARSING
	- $ renvoi le contenu d'une ENV
		- si un egal est trouvé il y a deux options
			- si le nom de la var existe on revoi son contenu
			- si le contenu de la var existe pas 
				- si il y a un = on revoit ce qu'il y a derriere 
					(cela peut etre une string vide)
				- si il n'y a rien, renvoi string vide
	- si $ sans rien derriere c'est juste le char $

	-caractere qui serapare ? --> ex: on a t=1 de declare, si on ecrit echo $t%oui, bash affiche 1%oui, alors qu'avec $toui il renvoi une string vide
		- ~ # { } \ / ^ @ ° £ % § --> tout ce qui n'est pas alapha numerique et qui n'est pas un sseparator Y COMPRIS A et E avec accent
-------------------------------------------------------------


- gerer les \n sur echo et \\n 
	- le \ s'il est tt seul disparait
- gerer les $ avant un nom de variable avec export
- gerer les unset des variable deja mise
- gerer les \n sur echo et \\n
-regler le LEAK après l'execution de "echo lol | echo mdr"
- ajouter les ' ' autour de la valeur d'une var s'il y a un = dedans 
		- gerer ca dans export, dans env et dans trans_env
- GERER tous les charactere speciaux juste apres un \, meme les guillemets
- QUAND ON est entre guillement, a chaque \ rencontré, on rajoute automatiquement un \ collé a lui- Quand on rencontre un \, si le caractere suivant est defacto considere comme un caractere seul ET ascii, c'est a dire, ni un separateur, ni un caractere special genre retour a la ligne, non. C'est juste un caractere a prendre en compte comme input(le \ lui disparait)
